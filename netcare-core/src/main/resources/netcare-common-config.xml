<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011,2012 Callista Enterprise AB <info@callistaenterprise.se>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

  <beans profile="prod,qa">
    <bean id="jpaProperties" class="org.springframework.beans.factory.config.MapFactoryBean">
      <property name="sourceMap">
        <map>
          <entry key="hibernate.dialect" value="${database.dialect}" />
          <entry key="hibernate.connection.pool_size" value="10" />
          <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
        </map>
      </property>
    </bean>
  </beans>

  <beans profile="test">
    <bean id="jpaProperties" class="org.springframework.beans.factory.config.MapFactoryBean">
      <property name="sourceMap">
        <map>
          <entry key="hibernate.dialect" value="${database.dialect}" />
          <entry key="hibernate.show_sql" value="${database.show-sql}" />
          <entry key="hibernate.format_sql" value="${database.format-sql}" />
          <entry key="hibernate.connection.pool_size" value="1" />
          <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
          <entry key="hibernate.hbm2ddl.auto" value="${database.updateStrategy}" />
        </map>
      </property>
    </bean>
  </beans>

  <beans>

    <context:annotation-config />
    <context:component-scan base-package="org.callistasoftware.netcare.core.spi.impl, org.callistasoftware.netcare.core.job" />

    <jpa:repositories base-package="org.callistasoftware.netcare.core.repository" />

    <tx:annotation-driven />

    <tx:advice id="txAdvice" transaction-manager="transactionManager"/>

    <task:annotation-driven />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="${database.driver}" />
      <property name="url" value="${database.url}" />
      <property name="username" value="${database.username}" />
      <property name="password" value="${database.password}" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="persistenceUnitName" value="netcare-pu" />
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="database" value="${database.vendor}" />
          <property name="showSql" value="${database.show-sql}" />
          <property name="generateDdl" value="true" />
        </bean>
      </property>
      <property name="jpaPropertyMap" ref="jpaProperties" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
      <constructor-arg value="512" />
    </bean>

    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
      <property name="userPropertyToUse" value="username" />
    </bean>

      <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
          <property name="basename" value="messages" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="${email.host}" />
      <property name="username" value="${email.username}" />
      <property name="password" value="${email.password}" />

      <property name="javaMailProperties">
        <props>
          <prop key="mail.smtp.auth">true</prop>
          <prop key="mail.smtp.starttls.enable">true</prop>
        </props>
      </property>
    </bean>

  </beans>

</beans>
